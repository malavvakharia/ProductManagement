@model ProductExtra.Models.Registration

@{
    ViewBag.Title = "User Registration";
}
@{
    Layout = null;
}


<html>
<head>
    <style>

        input:focus {
            border: 3px solid #555;
        }
    </style>
    <script>
        function myFunction(x) {
            x.style.border = "3px solid #555";
        }
        function myFunction1(x) {
            x.style.border = "";
        }
    </script>
    <title>Login</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/png" href="~/Imgs/favicon.ico" />
    <link href="~/Logincss/main.css" rel="stylesheet" />
    <link href="~/Logincss/util.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css" rel="stylesheet" type="text/css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
</head>
<body>

    @using (Html.BeginForm())
    {
        //@Html.AntiForgeryToken()
        <div class="limiter">
            <div class="container-login100">
                <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
                    <form class="login100-form  flex-sb flex-w">
                        <span class="login100-form-title p-b-32">
                            Account Registration
                        </span>

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <span class="txt1 p-b-11">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <div class="wrap-input100 m-b-12">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { onmouseover = "myFunction(this)", onmouseout = "myFunction1(this)", @class = "input100", type = "text", placeholder = "Enter Username" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

                        <span class="txt1 p-b-11">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <div class="wrap-input100 m-b-12">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { onmouseover = "myFunction(this)", onmouseout = "myFunction1(this)", @class = "input100", type = "text", placeholder = "Enter Email" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                        <span class="txt1 p-b-11">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <div class="wrap-input100 m-b-12">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { onmouseover = "myFunction(this)", onmouseout = "myFunction1(this)", @class = "input100", type = "password", placeholder = "Enter Password" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                        <span class="txt1 p-b-11">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        </span>
                        <div class="wrap-input100 m-b-12">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { onmouseover = "myFunction(this)", onmouseout = "myFunction1(this)", @class = "input100", type = "password", placeholder = "Enter Confirm Password" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })


                        <div class="flex-sb-m w-full p-b-48">
                            <div class="contact100-form-checkbox">
                                <input class="input-checkbox100" id="ckb1" type="checkbox" name="remember-me">

                            </div>

                            <div>
                                <a href="@Url.Action("Login","User")" class="txt3">
                                    Login
                                </a>
                            </div>
                        </div>

                        <div class="container-login100-form-btn">
                            <button class="login100-form-btn" type="submit">
                                Registration
                            </button>
                        </div>

                    </form>
                </div>
            </div>
        </div>




    }
    <script src="~/Scripts/sweetalert.min.js"></script>
    @if (ViewBag.DuplicateMessage  == "true")
    {
        <script type="text/javascript">
            swal({
                title: "Username or Email Already Exists.",

            });

        </script>

    }
    @if (ViewBag.SuccessMessage == "true")
    {
        <script type="text/javascript">
            swal({
                title: "Successfully Registed.",

            });

        </script>
        ViewBag.SuccessMessage = "False";

    }
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


</body>
</html>
